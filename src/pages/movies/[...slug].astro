---
import { CollectionEntry, getCollection } from "astro:content";
import getReadingTime from "reading-time";
import { clsx } from "clsx";

import Share from "@components/content/share.vue";
import Quotes from "@components/content/quotes.vue";
import JpHeading from "@components/jp-heading.vue";
import Staff from "@components/content/staff.vue";
import Characters from "@components/content/characters.vue";
import BgGradientBox from "@components/hero-image-box.vue";

import Layout from "@layouts/Layout.astro";

import { IMediaItem } from "@utils/ts/aniListApiTypes";
import { contentPageQuery } from "@utils/queries";

export async function getStaticPaths() {
  const movies = await getCollection("movies");

  return movies.map((entry) => ({
    params: {
      slug: entry.slug,
    },
    props: { entry, next: "", previous: "" },
  }));
}

interface Props {
  entry: CollectionEntry<"movies">;
  next: CollectionEntry<"movies"> | null;
  previous: CollectionEntry<"movies"> | null;
}

const { entry, next, previous } = Astro.props;
const {
  characterQuotes,
  nativeTitle,
  img,
  preface,
  rating,
  releaseDate,
  scores,
  title,
} = entry.data;
const { Content } = await entry.render();
const url = Astro.url;
const readingTime = getReadingTime(entry.body);

const response = await fetch("https://graphql.anilist.co", {
  method: "POST",
  headers: { "Content-Type": "application/json" },
  body: JSON.stringify({
    query: contentPageQuery,
    variables: {
      search: title,
    },
  }),
});

const json = await response.json();
const movieData = json.data as IMediaItem;

const {
  genres,
  characters,
  bannerImage,
  duration,
  studios,
  startDate,
  tags,
  averageScore,
  episodes,
  idMal,
  reviews,
  siteUrl,
  staff,
  trailer,
} = movieData.Media;
---

<Layout title={entry.data.title}>
  <BgGradientBox img={bannerImage}>
    <h1>
      <span>{title}</span>
      <JpHeading top="25%">
        {nativeTitle}
      </JpHeading>
    </h1>
    <h4 class="py-4">
      {preface}
    </h4>
    <div>
      <p>{genres.join(", ").toLowerCase()}</p>
    </div>
    <BlueGradientCard>
      <div class="grid grid-cols-1 justify-center gap-4 p-4 md:grid-cols-2">
        <div>
          <p>
            At {startDate.day}/{startDate.month}/{startDate.year}
            the world could enjoy this entertainment piece.
          </p>
        </div>
        <div>
          <p>
            about duration and time related things, well this a movie so the
            lenght of it is about {duration} minutes.
          </p>
        </div>

        <div>
          <p>
            this stuff was produced, mainly, by{" "}
            {studios.edges[0].node.name}.
          </p>
        </div>
        <div>
          <p>to finish this off, let&apos;s talk about genres: .</p>
        </div>
      </div>
    </BlueGradientCard>
  </BgGradientBox>

  <div>
    <div class="grid grid-cols-1 gap-4 py-20 md:grid-cols-2">
      <Characters data={characters.edges} />
      <Staff data={staff.edges} />
    </div>

    <div class="py-20">
      <h1>
        <span>bobo&apos;s ramblings</span>
        <JpHeading top="25%">ボボ の 電波な奴</JpHeading>
      </h1>
    </div>

    <Quotes data={characterQuotes} />

    <div class="py-20">
      <h1>
        <span>bobo&apos;s verdict</span>
        <JpHeading>ボボ の 評決</JpHeading>
      </h1>
      <div class="grid grid-cols-1 gap-4 md:grid-cols-2">
        <h2 class="py-6">{rating.text}</h2>
        <img
          alt="rating illustration"
          class="h-28 w-28"
          src="/assets/images/pikachu-test.png"
        />
      </div>
    </div>

    <div class="py-20">
      <h2 class="text-center">
        <span>other humans opinion</span>
      </h2>
      <p class="text-xs">in case you're not satisfied with mine...</p>
      <div>
        {
          reviews.edges.map((item) => (
            <div>
              <p>{item.node.summary}</p>
              <p class="text-center">anon</p>
            </div>
          ))
        }
      </div>
    </div>

    <Share
      title={`${nativeTitle} - bobo's zoomeranime`}
      url={new URL(Astro.url.pathname, Astro.site).href}
      subjects=""
    />

    <div class="flex justify-between">
      {
        previous && (
          <div
            class={clsx(
              "flex w-full justify-center md:justify-start",
              next && "md:w-auto"
            )}
          >
            <button>
              <a href={`movies/${previous}`}>
                <LeftArrow />
                <span>Previous movie</span>
              </a>
            </button>
          </div>
        )
      }

      {
        next && (
          <div
            class={clsx(
              "flex w-full justify-center md:justify-start",
              previous && "md:w-auto"
            )}
          >
            <a href={`tv-shows/${next}`}>
              <button>
                <span class="mr-1">Next movie</span>
                <RightArrow />
              </button>
            </a>
          </div>
        )
      }
    </div>
  </div>
</Layout>
